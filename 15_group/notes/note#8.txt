스트림(stream)이란?
데이터의 흐름, 혹은 데이터를 전송하는 소프트웨어 모듈

입출력 기본 단위 : 바이트
입력 스트림 : 입력 장치, 네트워크, 파일로부터 데이터를 프로그램으로 전달하는 스트림
출력 스트림 : 프로그램에서 출력되는 데이터를 출력 장치, 네트워크, 파일로 전달하는 스트림


 C++ 입출력 스트림 버퍼
1. 키 입력 스트림의 버퍼 - 입력 장치로부터 입력된 데이터를 프로그램으로 전달하기 전에 일시 저장
->키 입력 도중 수정 가능 : 백스페이스 키가 입력되면 이전에 입력된 키를 버퍼에서 지움
->프로그램은 사용자의 키 입력이 끝난 시점에서 읽음
엔터키 : 키 입력의 끝을 의미
->엔터키가 입력된 시점부터 키 입력 버퍼에서 프로그램이 읽기 시작

스크린 출력 스트림 버퍼 - 프로그램에서 출력된 데이터를 출력 장치로 보내기 전에 일시 저장
->버퍼가 꽉 차거나 강제 출력 명령 시에 출력 장치에 출력

C++ 표준은 스트림 입출력만 지원
스트림 입출력 방식(stream I/O) : 스트림 버퍼를 이용한 입출력 방식
->입력된 키는 버퍼에 저장 - 엔터 키가 입력되면 프로그램이 버퍼에서 읽어가는 방식
->출력되는 데이터는 일차적으로 스트림 버퍼에 저장 -> 버퍼가 꽉 차거나, '\n'을 만나거나, 강제 출력 명령의 경우에만 버퍼가 출력 장치에 출력

C++ 프로그램이 실행될 때 자동으로 생겨나는 스트림

cin : istream 타입의 스트림 객체로서 키보드 장치와 연결
cout : ostream 타입의 스트림 객체로서 스크린 장치와 연결
cerr : ostream 타입의 스트림 객체로서 스크린 장치와 연결
오류 메시지를 출력할 목적, 스트림 내부 버퍼 거치지 않고 출력
clog : ostream 타입의 스트림 객체로서 스크린 장치와 연결
오류 메시지를 출력할 목적, 스트림 내부에 버퍼 거쳐 출력

포맷 입출력: 입출력 스트림에서 입출력 형식을 지정하기 위한 플래그

1. 포맷 플래그 : 입출력 스트림에서 입출력 형식을 지정하기 위한 플래그

포맷 플래그를 세팅하는 멤버 함수
(1) long setf(long flags) : flags를 스트림의 포맷 플래그로 설정하고 이전 플래그를 리턴한다.
(2) long unsetf(long flags) : floags에 설정된 비트 값에 따라 스트림의 포맷 플래그를 해제하고 이전 플래그를 리턴
=> 포맷 플래그는 한 번 설정하면 해제할 때까지 유지

2. 포맷 함수 활용
(1) int width(int minwidth) : 출력되는 필드의 최소 너비를 minwidth로 설정하고 이전에 설정된 너비값 리턴
(2) char fill(char cfill) : 필드의 빈칸을 cfill문자로 채우도록 지정하고 이전 문자 값 리턴
(3) int precision(int np) : 출력되는 수의 유효숫자 자리수를 np개로 설정. 정수 부분과 소수점 이하의 수의 자리를 모두 포함하고 소수점(.)은 제외

3. 조작자(manipulator) 
1. 조작자는 함수, 항상 << 나 >> 연산자와 함께 사용됨
-> 개발자 만의 조작자 작성 가능 : 다양한 목적
-> 매개 변수 없는 조작자와 매개 변수를 가진 조작자로 구분
